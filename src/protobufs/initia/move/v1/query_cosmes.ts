// @generated by protoc-gen-cosmes v0.0.1 with parameter "target=ts"
// @generated from file initia/move/v1/query.proto (package initia.move.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { QueryModuleRequest, QueryModuleResponse, QueryModulesRequest, QueryModulesResponse, QueryParamsRequest, QueryParamsResponse, QueryResourceRequest, QueryResourceResponse, QueryResourcesRequest, QueryResourcesResponse, QueryScriptABIRequest, QueryScriptABIResponse, QueryTableEntriesRequest, QueryTableEntriesResponse, QueryTableEntryRequest, QueryTableEntryResponse, QueryTableInfoRequest, QueryTableInfoResponse, QueryViewFunctionRequest, QueryViewFunctionResponse } from "./query_pb.js";

const TYPE_NAME = "initia.move.v1.Query";

/**
 * Module gets the module info
 *
 * @generated from rpc initia.move.v1.Query.Module
 */
export const QueryModuleService = {
  typeName: TYPE_NAME,
  method: "Module",
  Request: QueryModuleRequest,
  Response: QueryModuleResponse,
} as const;

/**
 * Modules gets the module infos
 *
 * @generated from rpc initia.move.v1.Query.Modules
 */
export const QueryModulesService = {
  typeName: TYPE_NAME,
  method: "Modules",
  Request: QueryModulesRequest,
  Response: QueryModulesResponse,
} as const;

/**
 * Resource gets the module info
 *
 * @generated from rpc initia.move.v1.Query.Resource
 */
export const QueryResourceService = {
  typeName: TYPE_NAME,
  method: "Resource",
  Request: QueryResourceRequest,
  Response: QueryResourceResponse,
} as const;

/**
 * Resources gets the module infos
 *
 * @generated from rpc initia.move.v1.Query.Resources
 */
export const QueryResourcesService = {
  typeName: TYPE_NAME,
  method: "Resources",
  Request: QueryResourcesRequest,
  Response: QueryResourcesResponse,
} as const;

/**
 * Query table info of the given address
 *
 * @generated from rpc initia.move.v1.Query.TableInfo
 */
export const QueryTableInfoService = {
  typeName: TYPE_NAME,
  method: "TableInfo",
  Request: QueryTableInfoRequest,
  Response: QueryTableInfoResponse,
} as const;

/**
 * Query table entry of the given key
 *
 * @generated from rpc initia.move.v1.Query.TableEntry
 */
export const QueryTableEntryService = {
  typeName: TYPE_NAME,
  method: "TableEntry",
  Request: QueryTableEntryRequest,
  Response: QueryTableEntryResponse,
} as const;

/**
 * Query table entries with pagination
 *
 * @generated from rpc initia.move.v1.Query.TableEntries
 */
export const QueryTableEntriesService = {
  typeName: TYPE_NAME,
  method: "TableEntries",
  Request: QueryTableEntriesRequest,
  Response: QueryTableEntriesResponse,
} as const;

/**
 * ViewFunction execute entry function and return  the function result
 *
 * @generated from rpc initia.move.v1.Query.ViewFunction
 */
export const QueryViewFunctionService = {
  typeName: TYPE_NAME,
  method: "ViewFunction",
  Request: QueryViewFunctionRequest,
  Response: QueryViewFunctionResponse,
} as const;

/**
 * ScriptABI decode script bytes into ABI
 *
 * @generated from rpc initia.move.v1.Query.ScriptABI
 */
export const QueryScriptABIService = {
  typeName: TYPE_NAME,
  method: "ScriptABI",
  Request: QueryScriptABIRequest,
  Response: QueryScriptABIResponse,
} as const;

/**
 * Params queries all parameters.
 *
 * @generated from rpc initia.move.v1.Query.Params
 */
export const QueryParamsService = {
  typeName: TYPE_NAME,
  method: "Params",
  Request: QueryParamsRequest,
  Response: QueryParamsResponse,
} as const;

