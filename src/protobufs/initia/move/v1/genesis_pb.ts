// @generated by protoc-gen-es v1.7.0 with parameter "target=ts"
// @generated from file initia/move/v1/genesis.proto (package initia.move.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { DexPair, Module, Params, Resource, TableEntry, TableInfo } from "./types_pb.js";

/**
 * GenesisState - genesis state of x/move
 *
 * @generated from message initia.move.v1.GenesisState
 */
export class GenesisState extends Message<GenesisState> {
  /**
   * @generated from field: initia.move.v1.Params params = 1;
   */
  params?: Params;

  /**
   * @generated from field: uint64 execution_counter = 2;
   */
  executionCounter = protoInt64.zero;

  /**
   * @generated from field: repeated bytes stdlibs = 3;
   */
  stdlibs: Uint8Array[] = [];

  /**
   * @generated from field: repeated initia.move.v1.Module modules = 4;
   */
  modules: Module[] = [];

  /**
   * @generated from field: repeated initia.move.v1.Resource resources = 5;
   */
  resources: Resource[] = [];

  /**
   * @generated from field: repeated initia.move.v1.TableInfo table_infos = 6;
   */
  tableInfos: TableInfo[] = [];

  /**
   * @generated from field: repeated initia.move.v1.TableEntry table_entries = 7;
   */
  tableEntries: TableEntry[] = [];

  /**
   * @generated from field: repeated initia.move.v1.DexPair dex_pairs = 8;
   */
  dexPairs: DexPair[] = [];

  constructor(data?: PartialMessage<GenesisState>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "initia.move.v1.GenesisState";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "params", kind: "message", T: Params },
    { no: 2, name: "execution_counter", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "stdlibs", kind: "scalar", T: 12 /* ScalarType.BYTES */, repeated: true },
    { no: 4, name: "modules", kind: "message", T: Module, repeated: true },
    { no: 5, name: "resources", kind: "message", T: Resource, repeated: true },
    { no: 6, name: "table_infos", kind: "message", T: TableInfo, repeated: true },
    { no: 7, name: "table_entries", kind: "message", T: TableEntry, repeated: true },
    { no: 8, name: "dex_pairs", kind: "message", T: DexPair, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenesisState {
    return new GenesisState().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenesisState {
    return new GenesisState().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenesisState {
    return new GenesisState().fromJsonString(jsonString, options);
  }

  static equals(a: GenesisState | PlainMessage<GenesisState> | undefined, b: GenesisState | PlainMessage<GenesisState> | undefined): boolean {
    return proto3.util.equals(GenesisState, a, b);
  }
}

