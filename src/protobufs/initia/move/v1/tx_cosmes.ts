// @generated by protoc-gen-cosmes v0.0.1 with parameter "target=ts"
// @generated from file initia/move/v1/tx.proto (package initia.move.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { MsgDelist, MsgDelistResponse, MsgExecute, MsgExecuteResponse, MsgGovExecute, MsgGovExecuteResponse, MsgGovPublish, MsgGovPublishResponse, MsgGovScript, MsgGovScriptResponse, MsgPublish, MsgPublishResponse, MsgScript, MsgScriptResponse, MsgUpdateParams, MsgUpdateParamsResponse, MsgWhitelist, MsgWhitelistResponse } from "./tx_pb.js";

const TYPE_NAME = "initia.move.v1.Msg";

/**
 * Publish stores compiled Move module
 *
 * @generated from rpc initia.move.v1.Msg.Publish
 */
export const MsgPublishService = {
  typeName: TYPE_NAME,
  method: "Publish",
  Request: MsgPublish,
  Response: MsgPublishResponse,
} as const;

/**
 * Execute runs a entry function with the given message
 *
 * @generated from rpc initia.move.v1.Msg.Execute
 */
export const MsgExecuteService = {
  typeName: TYPE_NAME,
  method: "Execute",
  Request: MsgExecute,
  Response: MsgExecuteResponse,
} as const;

/**
 * Script runs a scripts with the given message
 *
 * @generated from rpc initia.move.v1.Msg.Script
 */
export const MsgScriptService = {
  typeName: TYPE_NAME,
  method: "Script",
  Request: MsgScript,
  Response: MsgScriptResponse,
} as const;

/**
 * GovPublish stores compiled Move module via gov proposal
 *
 * @generated from rpc initia.move.v1.Msg.GovPublish
 */
export const MsgGovPublishService = {
  typeName: TYPE_NAME,
  method: "GovPublish",
  Request: MsgGovPublish,
  Response: MsgGovPublishResponse,
} as const;

/**
 * GovExecute runs a entry function with the given message via gov proposal
 *
 * @generated from rpc initia.move.v1.Msg.GovExecute
 */
export const MsgGovExecuteService = {
  typeName: TYPE_NAME,
  method: "GovExecute",
  Request: MsgGovExecute,
  Response: MsgGovExecuteResponse,
} as const;

/**
 * GovScript runs a scripts with the given message via gov proposal
 *
 * @generated from rpc initia.move.v1.Msg.GovScript
 */
export const MsgGovScriptService = {
  typeName: TYPE_NAME,
  method: "GovScript",
  Request: MsgGovScript,
  Response: MsgGovScriptResponse,
} as const;

/**
 * Whitelist registers a dex pair to whitelist of various features.
 * - whitelist from coin register operation
 * - allow counter party denom can be used as gas fee
 * - register lp denom as staking denom
 *
 * @generated from rpc initia.move.v1.Msg.Whitelist
 */
export const MsgWhitelistService = {
  typeName: TYPE_NAME,
  method: "Whitelist",
  Request: MsgWhitelist,
  Response: MsgWhitelistResponse,
} as const;

/**
 * Delist unregisters a dex pair from the whitelist.
 *
 * @generated from rpc initia.move.v1.Msg.Delist
 */
export const MsgDelistService = {
  typeName: TYPE_NAME,
  method: "Delist",
  Request: MsgDelist,
  Response: MsgDelistResponse,
} as const;

/**
 * UpdateParams defines an operation for updating the x/move module
 * parameters.
 *
 * @generated from rpc initia.move.v1.Msg.UpdateParams
 */
export const MsgUpdateParamsService = {
  typeName: TYPE_NAME,
  method: "UpdateParams",
  Request: MsgUpdateParams,
  Response: MsgUpdateParamsResponse,
} as const;

