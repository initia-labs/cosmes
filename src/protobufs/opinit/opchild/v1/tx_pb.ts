// @generated by protoc-gen-es v1.7.0 with parameter "target=ts"
// @generated from file opinit/opchild/v1/tx.proto (package opinit.opchild.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { Coin } from "../../../cosmos/base/v1beta1/coin_pb.js";
import { Params } from "./types_pb.js";

/**
 * MsgExecuteMessages is a message to execute the given
 * authority messages with validator permission.
 *
 * @generated from message opinit.opchild.v1.MsgExecuteMessages
 */
export class MsgExecuteMessages extends Message<MsgExecuteMessages> {
  /**
   * Sender is the that actor that signed a messages
   *
   * @generated from field: string sender = 1;
   */
  sender = "";

  /**
   * messages are the arbitrary messages to be executed.
   *
   * @generated from field: repeated google.protobuf.Any messages = 2;
   */
  messages: Any[] = [];

  constructor(data?: PartialMessage<MsgExecuteMessages>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "opinit.opchild.v1.MsgExecuteMessages";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "sender", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "messages", kind: "message", T: Any, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgExecuteMessages {
    return new MsgExecuteMessages().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgExecuteMessages {
    return new MsgExecuteMessages().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgExecuteMessages {
    return new MsgExecuteMessages().fromJsonString(jsonString, options);
  }

  static equals(a: MsgExecuteMessages | PlainMessage<MsgExecuteMessages> | undefined, b: MsgExecuteMessages | PlainMessage<MsgExecuteMessages> | undefined): boolean {
    return proto3.util.equals(MsgExecuteMessages, a, b);
  }
}

/**
 * MsgExecuteMessagesResponse returns MsgExecuteMessages message result data
 *
 * @generated from message opinit.opchild.v1.MsgExecuteMessagesResponse
 */
export class MsgExecuteMessagesResponse extends Message<MsgExecuteMessagesResponse> {
  constructor(data?: PartialMessage<MsgExecuteMessagesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "opinit.opchild.v1.MsgExecuteMessagesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgExecuteMessagesResponse {
    return new MsgExecuteMessagesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgExecuteMessagesResponse {
    return new MsgExecuteMessagesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgExecuteMessagesResponse {
    return new MsgExecuteMessagesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgExecuteMessagesResponse | PlainMessage<MsgExecuteMessagesResponse> | undefined, b: MsgExecuteMessagesResponse | PlainMessage<MsgExecuteMessagesResponse> | undefined): boolean {
    return proto3.util.equals(MsgExecuteMessagesResponse, a, b);
  }
}

/**
 * MsgExecuteLegacyContents is a message to execute legacy
 * (gov) contents with validator permission.
 *
 * @generated from message opinit.opchild.v1.MsgExecuteLegacyContents
 */
export class MsgExecuteLegacyContents extends Message<MsgExecuteLegacyContents> {
  /**
   * Sender is the that actor that signed a messages
   *
   * @generated from field: string sender = 1;
   */
  sender = "";

  /**
   * contents are the arbitrary legacy (gov) contents to be executed.
   *
   * @generated from field: repeated google.protobuf.Any contents = 2;
   */
  contents: Any[] = [];

  constructor(data?: PartialMessage<MsgExecuteLegacyContents>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "opinit.opchild.v1.MsgExecuteLegacyContents";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "sender", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "contents", kind: "message", T: Any, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgExecuteLegacyContents {
    return new MsgExecuteLegacyContents().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgExecuteLegacyContents {
    return new MsgExecuteLegacyContents().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgExecuteLegacyContents {
    return new MsgExecuteLegacyContents().fromJsonString(jsonString, options);
  }

  static equals(a: MsgExecuteLegacyContents | PlainMessage<MsgExecuteLegacyContents> | undefined, b: MsgExecuteLegacyContents | PlainMessage<MsgExecuteLegacyContents> | undefined): boolean {
    return proto3.util.equals(MsgExecuteLegacyContents, a, b);
  }
}

/**
 * MsgExecuteLegacyContentsResponse returns MsgExecuteLegacyContents message
 * result data
 *
 * @generated from message opinit.opchild.v1.MsgExecuteLegacyContentsResponse
 */
export class MsgExecuteLegacyContentsResponse extends Message<MsgExecuteLegacyContentsResponse> {
  constructor(data?: PartialMessage<MsgExecuteLegacyContentsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "opinit.opchild.v1.MsgExecuteLegacyContentsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgExecuteLegacyContentsResponse {
    return new MsgExecuteLegacyContentsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgExecuteLegacyContentsResponse {
    return new MsgExecuteLegacyContentsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgExecuteLegacyContentsResponse {
    return new MsgExecuteLegacyContentsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgExecuteLegacyContentsResponse | PlainMessage<MsgExecuteLegacyContentsResponse> | undefined, b: MsgExecuteLegacyContentsResponse | PlainMessage<MsgExecuteLegacyContentsResponse> | undefined): boolean {
    return proto3.util.equals(MsgExecuteLegacyContentsResponse, a, b);
  }
}

/**
 * MsgFinalizeTokenDeposit is a message to submit deposit funds from upper layer
 *
 * @generated from message opinit.opchild.v1.MsgFinalizeTokenDeposit
 */
export class MsgFinalizeTokenDeposit extends Message<MsgFinalizeTokenDeposit> {
  /**
   * the sender address
   *
   * @generated from field: string sender = 1;
   */
  sender = "";

  /**
   * from is l1 sender address
   *
   * @generated from field: string from = 2;
   */
  from = "";

  /**
   * to is l2 recipient address
   *
   * @generated from field: string to = 3;
   */
  to = "";

  /**
   * amount is the coin amount to deposit.
   *
   * @generated from field: cosmos.base.v1beta1.Coin amount = 4;
   */
  amount?: Coin;

  /**
   * sequence is the sequence number of l1 bridge
   *
   * @generated from field: uint64 sequence = 5;
   */
  sequence = protoInt64.zero;

  /**
   * height is the height of l1 which is including the deposit message
   *
   * @generated from field: uint64 height = 6;
   */
  height = protoInt64.zero;

  /**
   * / data is a extra bytes for hooks.
   *
   * @generated from field: bytes data = 7;
   */
  data = new Uint8Array(0);

  constructor(data?: PartialMessage<MsgFinalizeTokenDeposit>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "opinit.opchild.v1.MsgFinalizeTokenDeposit";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "sender", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "from", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "to", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "amount", kind: "message", T: Coin },
    { no: 5, name: "sequence", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 6, name: "height", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 7, name: "data", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgFinalizeTokenDeposit {
    return new MsgFinalizeTokenDeposit().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgFinalizeTokenDeposit {
    return new MsgFinalizeTokenDeposit().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgFinalizeTokenDeposit {
    return new MsgFinalizeTokenDeposit().fromJsonString(jsonString, options);
  }

  static equals(a: MsgFinalizeTokenDeposit | PlainMessage<MsgFinalizeTokenDeposit> | undefined, b: MsgFinalizeTokenDeposit | PlainMessage<MsgFinalizeTokenDeposit> | undefined): boolean {
    return proto3.util.equals(MsgFinalizeTokenDeposit, a, b);
  }
}

/**
 * MsgFinalizeTokenDepositResponse returns deposit result data
 *
 * @generated from message opinit.opchild.v1.MsgFinalizeTokenDepositResponse
 */
export class MsgFinalizeTokenDepositResponse extends Message<MsgFinalizeTokenDepositResponse> {
  constructor(data?: PartialMessage<MsgFinalizeTokenDepositResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "opinit.opchild.v1.MsgFinalizeTokenDepositResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgFinalizeTokenDepositResponse {
    return new MsgFinalizeTokenDepositResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgFinalizeTokenDepositResponse {
    return new MsgFinalizeTokenDepositResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgFinalizeTokenDepositResponse {
    return new MsgFinalizeTokenDepositResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgFinalizeTokenDepositResponse | PlainMessage<MsgFinalizeTokenDepositResponse> | undefined, b: MsgFinalizeTokenDepositResponse | PlainMessage<MsgFinalizeTokenDepositResponse> | undefined): boolean {
    return proto3.util.equals(MsgFinalizeTokenDepositResponse, a, b);
  }
}

/**
 * MsgInitiateTokenWithdrawal is a message to withdraw a new token from L2 to L1.
 *
 * @generated from message opinit.opchild.v1.MsgInitiateTokenWithdrawal
 */
export class MsgInitiateTokenWithdrawal extends Message<MsgInitiateTokenWithdrawal> {
  /**
   * the l2 sender address
   *
   * @generated from field: string sender = 1;
   */
  sender = "";

  /**
   * to is l1 recipient address
   *
   * @generated from field: string to = 2;
   */
  to = "";

  /**
   * amount is the coin amount to withdraw.
   *
   * @generated from field: cosmos.base.v1beta1.Coin amount = 4;
   */
  amount?: Coin;

  constructor(data?: PartialMessage<MsgInitiateTokenWithdrawal>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "opinit.opchild.v1.MsgInitiateTokenWithdrawal";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "sender", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "to", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "amount", kind: "message", T: Coin },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgInitiateTokenWithdrawal {
    return new MsgInitiateTokenWithdrawal().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgInitiateTokenWithdrawal {
    return new MsgInitiateTokenWithdrawal().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgInitiateTokenWithdrawal {
    return new MsgInitiateTokenWithdrawal().fromJsonString(jsonString, options);
  }

  static equals(a: MsgInitiateTokenWithdrawal | PlainMessage<MsgInitiateTokenWithdrawal> | undefined, b: MsgInitiateTokenWithdrawal | PlainMessage<MsgInitiateTokenWithdrawal> | undefined): boolean {
    return proto3.util.equals(MsgInitiateTokenWithdrawal, a, b);
  }
}

/**
 * MsgInitiateTokenWithdrawalResponse returns create token result data
 *
 * @generated from message opinit.opchild.v1.MsgInitiateTokenWithdrawalResponse
 */
export class MsgInitiateTokenWithdrawalResponse extends Message<MsgInitiateTokenWithdrawalResponse> {
  /**
   * @generated from field: uint64 sequence = 1;
   */
  sequence = protoInt64.zero;

  constructor(data?: PartialMessage<MsgInitiateTokenWithdrawalResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "opinit.opchild.v1.MsgInitiateTokenWithdrawalResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "sequence", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgInitiateTokenWithdrawalResponse {
    return new MsgInitiateTokenWithdrawalResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgInitiateTokenWithdrawalResponse {
    return new MsgInitiateTokenWithdrawalResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgInitiateTokenWithdrawalResponse {
    return new MsgInitiateTokenWithdrawalResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgInitiateTokenWithdrawalResponse | PlainMessage<MsgInitiateTokenWithdrawalResponse> | undefined, b: MsgInitiateTokenWithdrawalResponse | PlainMessage<MsgInitiateTokenWithdrawalResponse> | undefined): boolean {
    return proto3.util.equals(MsgInitiateTokenWithdrawalResponse, a, b);
  }
}

/**
 * MsgAddValidator defines a SDK message for adding a new validator.
 *
 * @generated from message opinit.opchild.v1.MsgAddValidator
 */
export class MsgAddValidator extends Message<MsgAddValidator> {
  /**
   * authority is the address that controls the module
   * (defaults to x/opchild unless overwritten).
   *
   * @generated from field: string authority = 1;
   */
  authority = "";

  /**
   * @generated from field: string moniker = 2;
   */
  moniker = "";

  /**
   * @generated from field: string validator_address = 3;
   */
  validatorAddress = "";

  /**
   * @generated from field: google.protobuf.Any pubkey = 4;
   */
  pubkey?: Any;

  constructor(data?: PartialMessage<MsgAddValidator>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "opinit.opchild.v1.MsgAddValidator";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "moniker", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "validator_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "pubkey", kind: "message", T: Any },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgAddValidator {
    return new MsgAddValidator().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgAddValidator {
    return new MsgAddValidator().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgAddValidator {
    return new MsgAddValidator().fromJsonString(jsonString, options);
  }

  static equals(a: MsgAddValidator | PlainMessage<MsgAddValidator> | undefined, b: MsgAddValidator | PlainMessage<MsgAddValidator> | undefined): boolean {
    return proto3.util.equals(MsgAddValidator, a, b);
  }
}

/**
 * MsgAddValidatorResponse returns add result data
 *
 * @generated from message opinit.opchild.v1.MsgAddValidatorResponse
 */
export class MsgAddValidatorResponse extends Message<MsgAddValidatorResponse> {
  constructor(data?: PartialMessage<MsgAddValidatorResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "opinit.opchild.v1.MsgAddValidatorResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgAddValidatorResponse {
    return new MsgAddValidatorResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgAddValidatorResponse {
    return new MsgAddValidatorResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgAddValidatorResponse {
    return new MsgAddValidatorResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgAddValidatorResponse | PlainMessage<MsgAddValidatorResponse> | undefined, b: MsgAddValidatorResponse | PlainMessage<MsgAddValidatorResponse> | undefined): boolean {
    return proto3.util.equals(MsgAddValidatorResponse, a, b);
  }
}

/**
 * MsgAddValidator is a message to remove a validator from designated list
 *
 * @generated from message opinit.opchild.v1.MsgRemoveValidator
 */
export class MsgRemoveValidator extends Message<MsgRemoveValidator> {
  /**
   * authority is the address that controls the module
   * (defaults to x/opchild unless overwritten).
   *
   * @generated from field: string authority = 1;
   */
  authority = "";

  /**
   * validator is the validator to remove.
   *
   * @generated from field: string validator_address = 2;
   */
  validatorAddress = "";

  constructor(data?: PartialMessage<MsgRemoveValidator>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "opinit.opchild.v1.MsgRemoveValidator";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "validator_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgRemoveValidator {
    return new MsgRemoveValidator().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgRemoveValidator {
    return new MsgRemoveValidator().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgRemoveValidator {
    return new MsgRemoveValidator().fromJsonString(jsonString, options);
  }

  static equals(a: MsgRemoveValidator | PlainMessage<MsgRemoveValidator> | undefined, b: MsgRemoveValidator | PlainMessage<MsgRemoveValidator> | undefined): boolean {
    return proto3.util.equals(MsgRemoveValidator, a, b);
  }
}

/**
 * MsgAddValidatorResponse returns remove result data
 *
 * @generated from message opinit.opchild.v1.MsgRemoveValidatorResponse
 */
export class MsgRemoveValidatorResponse extends Message<MsgRemoveValidatorResponse> {
  constructor(data?: PartialMessage<MsgRemoveValidatorResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "opinit.opchild.v1.MsgRemoveValidatorResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgRemoveValidatorResponse {
    return new MsgRemoveValidatorResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgRemoveValidatorResponse {
    return new MsgRemoveValidatorResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgRemoveValidatorResponse {
    return new MsgRemoveValidatorResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgRemoveValidatorResponse | PlainMessage<MsgRemoveValidatorResponse> | undefined, b: MsgRemoveValidatorResponse | PlainMessage<MsgRemoveValidatorResponse> | undefined): boolean {
    return proto3.util.equals(MsgRemoveValidatorResponse, a, b);
  }
}

/**
 * MsgUpdateParams is a message to update parameters
 *
 * @generated from message opinit.opchild.v1.MsgUpdateParams
 */
export class MsgUpdateParams extends Message<MsgUpdateParams> {
  /**
   * authority is the address that controls the module
   * (defaults to x/opchild unless overwritten).
   *
   * @generated from field: string authority = 1;
   */
  authority = "";

  /**
   * params are the arbitrary parameters to be updated.
   *
   * @generated from field: opinit.opchild.v1.Params params = 2;
   */
  params?: Params;

  constructor(data?: PartialMessage<MsgUpdateParams>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "opinit.opchild.v1.MsgUpdateParams";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "params", kind: "message", T: Params },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateParams {
    return new MsgUpdateParams().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateParams {
    return new MsgUpdateParams().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateParams {
    return new MsgUpdateParams().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateParams | PlainMessage<MsgUpdateParams> | undefined, b: MsgUpdateParams | PlainMessage<MsgUpdateParams> | undefined): boolean {
    return proto3.util.equals(MsgUpdateParams, a, b);
  }
}

/**
 * MsgUpdateParamsResponse returns parameter update result data
 *
 * @generated from message opinit.opchild.v1.MsgUpdateParamsResponse
 */
export class MsgUpdateParamsResponse extends Message<MsgUpdateParamsResponse> {
  constructor(data?: PartialMessage<MsgUpdateParamsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "opinit.opchild.v1.MsgUpdateParamsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateParamsResponse {
    return new MsgUpdateParamsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateParamsResponse {
    return new MsgUpdateParamsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateParamsResponse {
    return new MsgUpdateParamsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateParamsResponse | PlainMessage<MsgUpdateParamsResponse> | undefined, b: MsgUpdateParamsResponse | PlainMessage<MsgUpdateParamsResponse> | undefined): boolean {
    return proto3.util.equals(MsgUpdateParamsResponse, a, b);
  }
}

/**
 * MsgSpendFeePool is a message to withdraw collected fees from the module
 * account to the recipient address.
 *
 * @generated from message opinit.opchild.v1.MsgSpendFeePool
 */
export class MsgSpendFeePool extends Message<MsgSpendFeePool> {
  /**
   * authority is the address that controls the module
   * (defaults to x/opchild unless overwritten).
   *
   * @generated from field: string authority = 1;
   */
  authority = "";

  /**
   * recipient is address to receive the coins.
   *
   * @generated from field: string recipient = 2;
   */
  recipient = "";

  /**
   * the coin amount to spend.
   *
   * @generated from field: repeated cosmos.base.v1beta1.Coin amount = 3;
   */
  amount: Coin[] = [];

  constructor(data?: PartialMessage<MsgSpendFeePool>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "opinit.opchild.v1.MsgSpendFeePool";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "recipient", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "amount", kind: "message", T: Coin, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgSpendFeePool {
    return new MsgSpendFeePool().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgSpendFeePool {
    return new MsgSpendFeePool().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgSpendFeePool {
    return new MsgSpendFeePool().fromJsonString(jsonString, options);
  }

  static equals(a: MsgSpendFeePool | PlainMessage<MsgSpendFeePool> | undefined, b: MsgSpendFeePool | PlainMessage<MsgSpendFeePool> | undefined): boolean {
    return proto3.util.equals(MsgSpendFeePool, a, b);
  }
}

/**
 * MsgSpendFeePoolResponse returns deposit result data
 *
 * @generated from message opinit.opchild.v1.MsgSpendFeePoolResponse
 */
export class MsgSpendFeePoolResponse extends Message<MsgSpendFeePoolResponse> {
  constructor(data?: PartialMessage<MsgSpendFeePoolResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "opinit.opchild.v1.MsgSpendFeePoolResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgSpendFeePoolResponse {
    return new MsgSpendFeePoolResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgSpendFeePoolResponse {
    return new MsgSpendFeePoolResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgSpendFeePoolResponse {
    return new MsgSpendFeePoolResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgSpendFeePoolResponse | PlainMessage<MsgSpendFeePoolResponse> | undefined, b: MsgSpendFeePoolResponse | PlainMessage<MsgSpendFeePoolResponse> | undefined): boolean {
    return proto3.util.equals(MsgSpendFeePoolResponse, a, b);
  }
}

