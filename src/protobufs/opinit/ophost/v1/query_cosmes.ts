// @generated by protoc-gen-cosmes v0.0.1 with parameter "target=ts"
// @generated from file opinit/ophost/v1/query.proto (package opinit.ophost.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { QueryBridgeRequest, QueryBridgeResponse, QueryBridgesRequest, QueryBridgesResponse, QueryOutputProposalRequest, QueryOutputProposalResponse, QueryOutputProposalsRequest, QueryOutputProposalsResponse, QueryParamsRequest, QueryParamsResponse, QueryTokenPairByL1DenomRequest, QueryTokenPairByL1DenomResponse, QueryTokenPairByL2DenomRequest, QueryTokenPairByL2DenomResponse, QueryTokenPairsRequest, QueryTokenPairsResponse } from "./query_pb.js";

const TYPE_NAME = "opinit.ophost.v1.Query";

/**
 * Bridge queries bridge info.
 *
 * @generated from rpc opinit.ophost.v1.Query.Bridge
 */
export const QueryBridgeService = {
  typeName: TYPE_NAME,
  method: "Bridge",
  Request: QueryBridgeRequest,
  Response: QueryBridgeResponse,
} as const;

/**
 * Bridges queries bridge infos.
 *
 * @generated from rpc opinit.ophost.v1.Query.Bridges
 */
export const QueryBridgesService = {
  typeName: TYPE_NAME,
  method: "Bridges",
  Request: QueryBridgesRequest,
  Response: QueryBridgesResponse,
} as const;

/**
 * TokenPairByL1Denom queries token pair by l1 denom.
 *
 * @generated from rpc opinit.ophost.v1.Query.TokenPairByL1Denom
 */
export const QueryTokenPairByL1DenomService = {
  typeName: TYPE_NAME,
  method: "TokenPairByL1Denom",
  Request: QueryTokenPairByL1DenomRequest,
  Response: QueryTokenPairByL1DenomResponse,
} as const;

/**
 * TokenPairByL2Denom queries token pair by l2 denom.
 *
 * @generated from rpc opinit.ophost.v1.Query.TokenPairByL2Denom
 */
export const QueryTokenPairByL2DenomService = {
  typeName: TYPE_NAME,
  method: "TokenPairByL2Denom",
  Request: QueryTokenPairByL2DenomRequest,
  Response: QueryTokenPairByL2DenomResponse,
} as const;

/**
 * TokenPairs queries all (l1 denom, l2 denom) pair.
 *
 * @generated from rpc opinit.ophost.v1.Query.TokenPairs
 */
export const QueryTokenPairsService = {
  typeName: TYPE_NAME,
  method: "TokenPairs",
  Request: QueryTokenPairsRequest,
  Response: QueryTokenPairsResponse,
} as const;

/**
 * OutputProposal queries output proposal by output index.
 *
 * @generated from rpc opinit.ophost.v1.Query.OutputProposal
 */
export const QueryOutputProposalService = {
  typeName: TYPE_NAME,
  method: "OutputProposal",
  Request: QueryOutputProposalRequest,
  Response: QueryOutputProposalResponse,
} as const;

/**
 * OutputProposals queries all output proposals.
 *
 * @generated from rpc opinit.ophost.v1.Query.OutputProposals
 */
export const QueryOutputProposalsService = {
  typeName: TYPE_NAME,
  method: "OutputProposals",
  Request: QueryOutputProposalsRequest,
  Response: QueryOutputProposalsResponse,
} as const;

/**
 * Parameters queries the rollup parameters.
 *
 * @generated from rpc opinit.ophost.v1.Query.Params
 */
export const QueryParamsService = {
  typeName: TYPE_NAME,
  method: "Params",
  Request: QueryParamsRequest,
  Response: QueryParamsResponse,
} as const;

