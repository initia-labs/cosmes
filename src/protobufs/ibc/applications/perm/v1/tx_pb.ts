// @generated by protoc-gen-es v1.7.0 with parameter "target=ts"
// @generated from file ibc/applications/perm/v1/tx.proto (package ibc.applications.perm.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";

/**
 * MsgUpdateChannelRelayer defines msg to set permissioned relyer for
 * the specific ibc channel.
 *
 * @generated from message ibc.applications.perm.v1.MsgUpdateChannelRelayer
 */
export class MsgUpdateChannelRelayer extends Message<MsgUpdateChannelRelayer> {
  /**
   * authority is the address that controls the module
   * (defaults to x/gov unless overwritten).
   *
   * @generated from field: string authority = 1;
   */
  authority = "";

  /**
   * @generated from field: string channel = 2;
   */
  channel = "";

  /**
   * @generated from field: string relayer = 3;
   */
  relayer = "";

  constructor(data?: PartialMessage<MsgUpdateChannelRelayer>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ibc.applications.perm.v1.MsgUpdateChannelRelayer";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "channel", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "relayer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateChannelRelayer {
    return new MsgUpdateChannelRelayer().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateChannelRelayer {
    return new MsgUpdateChannelRelayer().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateChannelRelayer {
    return new MsgUpdateChannelRelayer().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateChannelRelayer | PlainMessage<MsgUpdateChannelRelayer> | undefined, b: MsgUpdateChannelRelayer | PlainMessage<MsgUpdateChannelRelayer> | undefined): boolean {
    return proto3.util.equals(MsgUpdateChannelRelayer, a, b);
  }
}

/**
 * MsgUpdateChannelRelayerResponse defines the Msg/UpdateChannelRelayer response type.
 *
 * @generated from message ibc.applications.perm.v1.MsgUpdateChannelRelayerResponse
 */
export class MsgUpdateChannelRelayerResponse extends Message<MsgUpdateChannelRelayerResponse> {
  /**
   * sequence number of the sft transfer packet sent
   *
   * @generated from field: uint64 sequence = 1;
   */
  sequence = protoInt64.zero;

  constructor(data?: PartialMessage<MsgUpdateChannelRelayerResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "ibc.applications.perm.v1.MsgUpdateChannelRelayerResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "sequence", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateChannelRelayerResponse {
    return new MsgUpdateChannelRelayerResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateChannelRelayerResponse {
    return new MsgUpdateChannelRelayerResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateChannelRelayerResponse {
    return new MsgUpdateChannelRelayerResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateChannelRelayerResponse | PlainMessage<MsgUpdateChannelRelayerResponse> | undefined, b: MsgUpdateChannelRelayerResponse | PlainMessage<MsgUpdateChannelRelayerResponse> | undefined): boolean {
    return proto3.util.equals(MsgUpdateChannelRelayerResponse, a, b);
  }
}

